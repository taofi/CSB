; Listing generated by Microsoft (R) Optimizing Compiler Version 19.33.31629.0 

	TITLE	C:\Users\User\Desktop\óí\êïî\lab1\lab1\Debug\findYear.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

msvcjmc	SEGMENT
__3652B102_findYear@cpp DB 01H
msvcjmc	ENDS
PUBLIC	?findYear@@YAHPAD@Z				; findYear
PUBLIC	__JustMyCode_Default
EXTRN	@__CheckForDebuggerJustMyCode@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	5d		 pop	 ebp
  00004	c3		 ret	 0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\User\Desktop\óí\êïî\lab1\lab1\findYear.cpp
;	COMDAT ?findYear@@YAHPAD@Z
_TEXT	SEGMENT
_year$ = -8						; size = 4
_s$ = 8							; size = 4
?findYear@@YAHPAD@Z PROC				; findYear, COMDAT

; 1    : int findYear(char* s) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d 7d f4	 lea	 edi, DWORD PTR [ebp-12]
  0000f	b9 03 00 00 00	 mov	 ecx, 3
  00014	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00019	f3 ab		 rep stosd
  0001b	b9 00 00 00 00	 mov	 ecx, OFFSET __3652B102_findYear@cpp
  00020	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 2    : 	int year;
; 3    : 	s += 4;

  00025	8b 45 08	 mov	 eax, DWORD PTR _s$[ebp]
  00028	83 c0 04	 add	 eax, 4
  0002b	89 45 08	 mov	 DWORD PTR _s$[ebp], eax

; 4    : 	year = int(*s - '0') * 1000;

  0002e	8b 45 08	 mov	 eax, DWORD PTR _s$[ebp]
  00031	0f be 08	 movsx	 ecx, BYTE PTR [eax]
  00034	83 e9 30	 sub	 ecx, 48			; 00000030H
  00037	69 d1 e8 03 00
	00		 imul	 edx, ecx, 1000
  0003d	89 55 f8	 mov	 DWORD PTR _year$[ebp], edx

; 5    : 	year += (*(s + 1) - '0') * 100;

  00040	8b 45 08	 mov	 eax, DWORD PTR _s$[ebp]
  00043	0f be 48 01	 movsx	 ecx, BYTE PTR [eax+1]
  00047	83 e9 30	 sub	 ecx, 48			; 00000030H
  0004a	6b d1 64	 imul	 edx, ecx, 100
  0004d	03 55 f8	 add	 edx, DWORD PTR _year$[ebp]
  00050	89 55 f8	 mov	 DWORD PTR _year$[ebp], edx

; 6    : 	year += (*(s + 2) - '0') * 10;

  00053	8b 45 08	 mov	 eax, DWORD PTR _s$[ebp]
  00056	0f be 48 02	 movsx	 ecx, BYTE PTR [eax+2]
  0005a	83 e9 30	 sub	 ecx, 48			; 00000030H
  0005d	6b d1 0a	 imul	 edx, ecx, 10
  00060	03 55 f8	 add	 edx, DWORD PTR _year$[ebp]
  00063	89 55 f8	 mov	 DWORD PTR _year$[ebp], edx

; 7    : 	year += *(s + 3) - '0';

  00066	8b 45 08	 mov	 eax, DWORD PTR _s$[ebp]
  00069	0f be 48 03	 movsx	 ecx, BYTE PTR [eax+3]
  0006d	8b 55 f8	 mov	 edx, DWORD PTR _year$[ebp]
  00070	8d 44 0a d0	 lea	 eax, DWORD PTR [edx+ecx-48]
  00074	89 45 f8	 mov	 DWORD PTR _year$[ebp], eax

; 8    : 	return year;

  00077	8b 45 f8	 mov	 eax, DWORD PTR _year$[ebp]

; 9    : }

  0007a	5f		 pop	 edi
  0007b	5e		 pop	 esi
  0007c	5b		 pop	 ebx
  0007d	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00083	3b ec		 cmp	 ebp, esp
  00085	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0008a	8b e5		 mov	 esp, ebp
  0008c	5d		 pop	 ebp
  0008d	c3		 ret	 0
?findYear@@YAHPAD@Z ENDP				; findYear
_TEXT	ENDS
END
